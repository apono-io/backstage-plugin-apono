import { Theme, ThemeOptions } from '@material-ui/core';

export const serializeTheme = (theme: Theme): ThemeOptions => ({
  palette: {
    type: theme.palette.type,
    primary: theme.palette.primary,
    secondary: theme.palette.secondary,
    error: theme.palette.error,
    warning: theme.palette.warning,
    info: theme.palette.info,
    success: theme.palette.success,
    text: theme.palette.text,
    background: theme.palette.background,
    divider: theme.palette.divider,
    action: theme.palette.action,
    common: theme.palette.common,
    tonalOffset: theme.palette.tonalOffset,
    contrastThreshold: theme.palette.contrastThreshold,
    grey: theme.palette.grey,
    border: theme.palette.border,
  },
  typography: {
    fontFamily: theme.typography.fontFamily,
    fontSize: theme.typography.fontSize,
    fontWeightLight: theme.typography.fontWeightLight,
    fontWeightRegular: theme.typography.fontWeightRegular,
    fontWeightMedium: theme.typography.fontWeightMedium,
    fontWeightBold: theme.typography.fontWeightBold,
    h1: theme.typography.h1,
    h2: theme.typography.h2,
    h3: theme.typography.h3,
    h4: theme.typography.h4,
    h5: theme.typography.h5,
    h6: theme.typography.h6,
    subtitle1: theme.typography.subtitle1,
    subtitle2: theme.typography.subtitle2,
    body1: theme.typography.body1,
    body2: theme.typography.body2,
    button: theme.typography.button,
    caption: theme.typography.caption,
    overline: theme.typography.overline,
  },
  shape: {
    borderRadius: theme.shape.borderRadius,
  },
  breakpoints: {
    values: {
      xs: theme.breakpoints.values.xs,
      sm: theme.breakpoints.values.sm,
      md: theme.breakpoints.values.md,
      lg: theme.breakpoints.values.lg,
      xl: theme.breakpoints.values.xl,
    },
  },
  shadows: theme.shadows,
  overrides: {
    MuiPaper: theme.overrides?.MuiPaper,
    MuiCard: theme.overrides?.MuiCard,
    MuiCardContent: theme.overrides?.MuiCardContent,
    MuiButton: theme.overrides?.MuiButton,
    MuiIconButton: theme.overrides?.MuiIconButton,
    MuiDivider: theme.overrides?.MuiDivider,
    MuiAppBar: theme.overrides?.MuiAppBar,
    MuiDrawer: theme.overrides?.MuiDrawer,
    MuiList: theme.overrides?.MuiList,
    MuiListItem: theme.overrides?.MuiListItem,
    MuiListItemIcon: theme.overrides?.MuiListItemIcon,
    MuiListItemText: theme.overrides?.MuiListItemText,
    MuiTextField: theme.overrides?.MuiTextField,
    MuiInput: theme.overrides?.MuiInput,
    MuiOutlinedInput: theme.overrides?.MuiOutlinedInput,
    MuiFilledInput: theme.overrides?.MuiFilledInput,
    MuiDialog: theme.overrides?.MuiDialog,
    MuiDialogTitle: theme.overrides?.MuiDialogTitle,
    MuiDialogContent: theme.overrides?.MuiDialogContent,
    MuiDialogActions: theme.overrides?.MuiDialogActions,
    MuiTableCell: theme.overrides?.MuiTableCell,
    MuiTableRow: theme.overrides?.MuiTableRow,
    MuiTab: theme.overrides?.MuiTab,
    MuiTabs: theme.overrides?.MuiTabs,
  },
  props: {
    MuiPaper: theme.props?.MuiPaper,
    MuiCard: theme.props?.MuiCard,
    MuiCardContent: theme.props?.MuiCardContent,
    MuiButton: theme.props?.MuiButton,
    MuiIconButton: theme.props?.MuiIconButton,
    MuiDivider: theme.props?.MuiDivider,
    MuiAppBar: theme.props?.MuiAppBar,
    MuiDrawer: theme.props?.MuiDrawer,
    MuiList: theme.props?.MuiList,
    MuiListItem: theme.props?.MuiListItem,
    MuiListItemIcon: theme.props?.MuiListItemIcon,
    MuiListItemText: theme.props?.MuiListItemText,
    MuiTextField: theme.props?.MuiTextField,
    MuiInput: theme.props?.MuiInput,
    MuiOutlinedInput: theme.props?.MuiOutlinedInput,
    MuiFilledInput: theme.props?.MuiFilledInput,
    MuiDialog: theme.props?.MuiDialog,
    MuiDialogTitle: theme.props?.MuiDialogTitle,
    MuiDialogContent: theme.props?.MuiDialogContent,
    MuiDialogActions: theme.props?.MuiDialogActions,
    MuiTableCell: theme.props?.MuiTableCell,
    MuiTableRow: theme.props?.MuiTableRow,
    MuiTab: theme.props?.MuiTab,
    MuiTabs: theme.props?.MuiTabs,
  },
}); 